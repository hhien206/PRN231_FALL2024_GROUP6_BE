// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace Repository.Migrations
{
    [DbContext(typeof(Prn231DbJobRecruitmentContext))]
    [Migration("20241003183523_initial migration")]
    partial class initialmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BusinessObject.Models.Account", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AccountID");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ProfilePicture")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid?>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleID");

                    b.Property<string>("Username")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("AccountId")
                        .HasName("PK__Accounts__349DA5863F7D283D");

                    b.HasIndex("RoleId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("BusinessObject.Models.AccountSkillsMapping", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AccountID");

                    b.Property<Guid>("JobSkillId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JobSkillID");

                    b.Property<string>("Experienced")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("AccountId", "JobSkillId")
                        .HasName("PK__AccountS__F5E1F3780530B9A9");

                    b.HasIndex("JobSkillId");

                    b.ToTable("AccountSkillsMapping", (string)null);
                });

            modelBuilder.Entity("BusinessObject.Models.Application", b =>
                {
                    b.Property<Guid>("ApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ApplicationID");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AccountID");

                    b.Property<DateOnly?>("ApplicationDate")
                        .HasColumnType("date");

                    b.Property<Guid?>("JobId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JobID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ApplicationId")
                        .HasName("PK__Applicat__C93A4F794E371612");

                    b.HasIndex("AccountId");

                    b.HasIndex("JobId");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("BusinessObject.Models.InterviewProcess", b =>
                {
                    b.Property<Guid>("InterviewId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("InterviewID");

                    b.Property<Guid?>("ApplicationId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ApplicationID");

                    b.Property<DateOnly?>("InterviewDate")
                        .HasColumnType("date");

                    b.Property<string>("InterviewResult")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Interviewer")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("InterviewId")
                        .HasName("PK__Intervie__C97C583265CF0C56");

                    b.HasIndex("ApplicationId");

                    b.ToTable("InterviewProcess", (string)null);
                });

            modelBuilder.Entity("BusinessObject.Models.Job", b =>
                {
                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JobID");

                    b.Property<DateOnly?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("Deadline")
                        .HasColumnType("date");

                    b.Property<string>("ExperiencesRequired")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("JobBenefits")
                        .HasColumnType("text");

                    b.Property<Guid?>("JobCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JobCategoryID");

                    b.Property<string>("JobDescription")
                        .HasColumnType("text");

                    b.Property<Guid?>("JobLevelId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JobLevelID");

                    b.Property<string>("JobRequirements")
                        .HasColumnType("text");

                    b.Property<string>("JobTime")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("JobTitle")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<Guid?>("JobTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JobTypeID");

                    b.Property<Guid?>("RecruiterId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RecruiterID");

                    b.Property<string>("SalaryRange")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("JobId")
                        .HasName("PK__Jobs__056690E2DC1779CC");

                    b.HasIndex("JobCategoryId");

                    b.HasIndex("JobLevelId");

                    b.HasIndex("JobTypeId");

                    b.HasIndex("RecruiterId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("BusinessObject.Models.JobCategory", b =>
                {
                    b.Property<Guid>("JobCategoryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JobCategoryID");

                    b.Property<string>("JobCategoryName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("JobCategoryId")
                        .HasName("PK__JobCateg__302BAECD4921040C");

                    b.ToTable("JobCategories");
                });

            modelBuilder.Entity("BusinessObject.Models.JobLevel", b =>
                {
                    b.Property<Guid>("JobLevelId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JobLevelID");

                    b.Property<string>("JobLevelName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("JobLevelId")
                        .HasName("PK__JobLevel__7594C84C80A0CDFC");

                    b.ToTable("JobLevels");
                });

            modelBuilder.Entity("BusinessObject.Models.JobSkill", b =>
                {
                    b.Property<Guid>("JobSkillId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JobSkillID");

                    b.Property<string>("SkillName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("JobSkillId")
                        .HasName("PK__JobSkill__17C56FED13D1D2C6");

                    b.ToTable("JobSkills");
                });

            modelBuilder.Entity("BusinessObject.Models.JobSkillsMapping", b =>
                {
                    b.Property<Guid>("JobId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JobID");

                    b.Property<Guid>("JobSkillId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JobSkillID");

                    b.Property<string>("ExperienceRequired")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("JobId", "JobSkillId")
                        .HasName("PK__JobSkill__C41AC61CE7321307");

                    b.HasIndex("JobSkillId");

                    b.ToTable("JobSkillsMapping", (string)null);
                });

            modelBuilder.Entity("BusinessObject.Models.JobType", b =>
                {
                    b.Property<Guid>("JobTypeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("JobTypeID");

                    b.Property<string>("JobTypeName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("JobTypeId")
                        .HasName("PK__JobTypes__E1F4624DFBF4F63B");

                    b.ToTable("JobTypes");
                });

            modelBuilder.Entity("BusinessObject.Models.Resume", b =>
                {
                    b.Property<Guid>("ResumeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ResumeID");

                    b.Property<Guid?>("AccountId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AccountID");

                    b.Property<string>("ResumeUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ResumeURL");

                    b.HasKey("ResumeId")
                        .HasName("PK__Resumes__D7D7A3175839B490");

                    b.HasIndex("AccountId");

                    b.ToTable("Resumes");
                });

            modelBuilder.Entity("BusinessObject.Models.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RoleID");

                    b.Property<string>("RoleName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("RoleId")
                        .HasName("PK__Roles__8AFACE3A3CEF08C6");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = new Guid("5a7dd16e-5af3-4f1f-8cf5-f1f22c57b633"),
                            RoleName = "Member"
                        },
                        new
                        {
                            RoleId = new Guid("b8ddd40d-8e2c-4c1c-96e1-79bf6a3aad88"),
                            RoleName = "Recruiter"
                        },
                        new
                        {
                            RoleId = new Guid("4a5dd2d6-de03-48cc-94c2-d8a6799b1825"),
                            RoleName = "Admin"
                        });
                });

            modelBuilder.Entity("BusinessObject.Models.Account", b =>
                {
                    b.HasOne("BusinessObject.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Accounts__Profil__4BAC3F29");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BusinessObject.Models.AccountSkillsMapping", b =>
                {
                    b.HasOne("BusinessObject.Models.Account", "Account")
                        .WithMany("AccountSkillsMappings")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__AccountSk__Accou__628FA481");

                    b.HasOne("BusinessObject.Models.JobSkill", "JobSkill")
                        .WithMany("AccountSkillsMappings")
                        .HasForeignKey("JobSkillId")
                        .IsRequired()
                        .HasConstraintName("FK__AccountSk__JobSk__6383C8BA");

                    b.Navigation("Account");

                    b.Navigation("JobSkill");
                });

            modelBuilder.Entity("BusinessObject.Models.Application", b =>
                {
                    b.HasOne("BusinessObject.Models.Account", "Account")
                        .WithMany("Applications")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__Applicati__Accou__6754599E");

                    b.HasOne("BusinessObject.Models.Job", "Job")
                        .WithMany("Applications")
                        .HasForeignKey("JobId")
                        .HasConstraintName("FK__Applicati__JobID__66603565");

                    b.Navigation("Account");

                    b.Navigation("Job");
                });

            modelBuilder.Entity("BusinessObject.Models.InterviewProcess", b =>
                {
                    b.HasOne("BusinessObject.Models.Application", "Application")
                        .WithMany("InterviewProcesses")
                        .HasForeignKey("ApplicationId")
                        .HasConstraintName("FK__Interview__Appli__6A30C649");

                    b.Navigation("Application");
                });

            modelBuilder.Entity("BusinessObject.Models.Job", b =>
                {
                    b.HasOne("BusinessObject.Models.JobCategory", "JobCategory")
                        .WithMany("Jobs")
                        .HasForeignKey("JobCategoryId")
                        .HasConstraintName("FK__Jobs__JobCategor__5AEE82B9");

                    b.HasOne("BusinessObject.Models.JobLevel", "JobLevel")
                        .WithMany("Jobs")
                        .HasForeignKey("JobLevelId")
                        .HasConstraintName("FK__Jobs__JobLevelID__5BE2A6F2");

                    b.HasOne("BusinessObject.Models.JobType", "JobType")
                        .WithMany("Jobs")
                        .HasForeignKey("JobTypeId")
                        .HasConstraintName("FK__Jobs__JobTypeID__59FA5E80");

                    b.HasOne("BusinessObject.Models.Account", "Recruiter")
                        .WithMany("Jobs")
                        .HasForeignKey("RecruiterId")
                        .HasConstraintName("FK__Jobs__RecruiterI__59063A47");

                    b.Navigation("JobCategory");

                    b.Navigation("JobLevel");

                    b.Navigation("JobType");

                    b.Navigation("Recruiter");
                });

            modelBuilder.Entity("BusinessObject.Models.JobSkillsMapping", b =>
                {
                    b.HasOne("BusinessObject.Models.Job", "Job")
                        .WithMany("JobSkillsMappings")
                        .HasForeignKey("JobId")
                        .IsRequired()
                        .HasConstraintName("FK__JobSkills__JobID__5EBF139D");

                    b.HasOne("BusinessObject.Models.JobSkill", "JobSkill")
                        .WithMany("JobSkillsMappings")
                        .HasForeignKey("JobSkillId")
                        .IsRequired()
                        .HasConstraintName("FK__JobSkills__JobSk__5FB337D6");

                    b.Navigation("Job");

                    b.Navigation("JobSkill");
                });

            modelBuilder.Entity("BusinessObject.Models.Resume", b =>
                {
                    b.HasOne("BusinessObject.Models.Account", "Account")
                        .WithMany("Resumes")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK__Resumes__Account__4E88ABD4");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("BusinessObject.Models.Account", b =>
                {
                    b.Navigation("AccountSkillsMappings");

                    b.Navigation("Applications");

                    b.Navigation("Jobs");

                    b.Navigation("Resumes");
                });

            modelBuilder.Entity("BusinessObject.Models.Application", b =>
                {
                    b.Navigation("InterviewProcesses");
                });

            modelBuilder.Entity("BusinessObject.Models.Job", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("JobSkillsMappings");
                });

            modelBuilder.Entity("BusinessObject.Models.JobCategory", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("BusinessObject.Models.JobLevel", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("BusinessObject.Models.JobSkill", b =>
                {
                    b.Navigation("AccountSkillsMappings");

                    b.Navigation("JobSkillsMappings");
                });

            modelBuilder.Entity("BusinessObject.Models.JobType", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("BusinessObject.Models.Role", b =>
                {
                    b.Navigation("Accounts");
                });
#pragma warning restore 612, 618
        }
    }
}
